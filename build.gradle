def projects = [":server", ":client"]

tasks.register('javadocAll', Javadoc) {
    group = "documentation"
    description = "Generate a full documentation for every subproject."

    source projects.collect { project(it).sourceSets.main.allJava }
    classpath = files(projects.collect { project(it).sourceSets.main.compileClasspath })
    destinationDir = file("docs/javadoc")

    options.addBooleanOption("-allow-script-in-comments", true)
    options.links "http://docs.oracle.com/javase/22/docs/api/"
    options.header "<script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"></script>"
    options.showFromPrivate()
}

def dbmsRootPassword = new String(file("assets/dbms_root_password").readBytes()).strip()

tasks.register('installDatabase', Exec) {
    group = "other"
    description = "Configures the database to be used by the server."

    commandLine "mysql", "-u", "root", "--password=$dbmsRootPassword"
    standardInput = file("assets/install_database.sql").newInputStream()
}

tasks.register('uninstallDatabase', Exec) {
    group = "other"
    description = "Removes the database used by the server and its user."

    commandLine "mysql", "-u", "root", "--password=$dbmsRootPassword"
    standardInput = file("assets/uninstall_database.sql").newInputStream()
}