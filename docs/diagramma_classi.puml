@startuml

skinparam classAttributeIconSize 0
set separator .

circle java.lang.Iterable
circle java.lang.Serializable
circle java.lang.Cloneable
class java.lang.Thread
class java.lang.Exception
class java.lang.RuntimeException

class com.davidecarella.hclus.server.data.Example implements java.lang.Iterable {
    -example: List<Double>
    +Example()
    +add(value: double)
    +get(index: int): double
    +distance(other: Example): double
    +toString(): String
    +iterator(): Iterator<Double>
}

class com.davidecarella.hclus.server.data.Data {
    -data: List<Example>
    +Data(tableName: String)
    +getNumberOfExamples(): int
    +getExample(index: int): Example
    +distance(): double[][]
    +toString(): String
}

com.davidecarella.hclus.server.data.Data o-- com.davidecarella.hclus.server.data.Example

class com.davidecarella.hclus.server.clustering.Cluster implements java.lang.Iterable, java.lang.Cloneable, java.lang.Serializable {
    -clusteredData: Set<Integer>
    +addData(exampleIndex: int)
    +getSize(): int
    +clone(): Cluster
    +mergeCluster(other: Cluster): Cluster
    +toString(): String
    +toString(data: Data): Data
    +iterator(): Iterator<Integer>
}

class com.davidecarella.hclus.server.clustering.ClusterSet implements java.lang.Serializable {
    -clusters: Cluster[]
    -lastClusterIndex: int
    +ClusterSet(maxSize: int)
    +add(cluster: Cluster)
    +get(index: int): Cluster
    +mergeClosestClusters(distanceCalculator: ClusterDistance, data: Data): ClusterSet
    toString(): String
    toString(): String
}

com.davidecarella.hclus.server.clustering.ClusterSet o-- com.davidecarella.hclus.server.clustering.Cluster

class com.davidecarella.hclus.server.clustering.Dendrogram implements java.lang.Serializable {
    -tree: ClusterSet[]
    +Dendrogram(depth: int)
    +setClusterSet(clusterSet: ClusterSet, level: int)
    +getClusterSet(level: int): ClusterSet
    +getDepth(): int
    +toString(): String
    +toString(data: Data): String
}

com.davidecarella.hclus.server.clustering.Dendrogram o-- com.davidecarella.hclus.server.clustering.ClusterSet

class com.davidecarella.hclus.server.clustering.HierarchicalClusterMiner implements java.lang.Serializable {
    -dendrogram: Dendrogram
    +HierarchicalClusterMiner(depth: int)
    +getDendrogramDepth(): int
    +mine(data: Data, distanceCalculator: ClusterDistance)
    {static} +load(fileName: String)
    +salva(fileName: String)
    +toString(): String
    +toString(data: Data): String
}

com.davidecarella.hclus.server.clustering.HierarchicalClusterMiner o-- com.davidecarella.hclus.server.clustering.Dendrogram

class com.davidecarella.hclus.server.database.DbAccess {
    -conn: Connection
    +initConnection()
    +getConnection(): Connection
    +closeConnection()
}

class com.davidecarella.hclus.server.database.TableSchema {
    -db: DbAccess
    -tableSchema: List<Column>
    +TableSchema(db: DbAccess, tableName: String)
    +getNumberOfAttributes(): int
    +getColumn(index: int): Column
}

com.davidecarella.hclus.server.database.TableSchema o-- com.davidecarella.hclus.server.database.DbAccess

class com.davidecarella.hclus.server.database.Column {
    -name: String
    -type: String
    +Column(name: String, type: String)
    +getColumnName(): String
    +isNumber(): boolean
    +toString(): String
}

com.davidecarella.hclus.server.database.Column --+ com.davidecarella.hclus.server.database.TableSchema

class com.davidecarella.hclus.server.database.TableData {
    -db: DbAccess
    +getDistinctTransactions(tablename: String): List<Example>
}

com.davidecarella.hclus.server.database.TableData o-- com.davidecarella.hclus.server.database.DbAccess

interface com.davidecarella.hclus.server.distance.ClusterDistance {
    distance(c1: Cluster, c2: Cluster, data: Data): double
}

class com.davidecarella.hclus.server.distance.SingleLinkDistance implements com.davidecarella.hclus.server.distance.ClusterDistance {
    distance(c1: Cluster, c2: Cluster, data: Data): double
}

class com.davidecarella.hclus.server.distance.AverageLinkDistance implements com.davidecarella.hclus.server.distance.ClusterDistance {
    distance(c1: Cluster, c2: Cluster, data: Data): double
}

com.davidecarella.hclus.server.clustering.HierarchicalClusterMiner ..> com.davidecarella.hclus.server.distance.ClusterDistance : "usa"
com.davidecarella.hclus.server.clustering.HierarchicalClusterMiner ..> com.davidecarella.hclus.server.data.Data : "usa"

class com.davidecarella.hclus.server.exceptions.ClusterSetFullException extends java.lang.RuntimeException {
    +ClusterSetFullException(message: String)
}

com.davidecarella.hclus.server.clustering.ClusterSet ..> com.davidecarella.hclus.server.exceptions.ClusterSetFullException : "usa"

class com.davidecarella.hclus.server.exceptions.ClusterSetTooSmallException extends java.lang.Exception {
    +ClusterSetTooSmallException(message: String)
}

com.davidecarella.hclus.server.clustering.ClusterSet ..> com.davidecarella.hclus.server.exceptions.ClusterSetTooSmallException : "usa"

class com.davidecarella.hclus.server.exceptions.DatabaseConnectionException extends java.lang.Exception {
    +DatabaseConnectionException(message: String)
    +DatabaseConnectionException(message: String, cause: Throwable)
}

com.davidecarella.hclus.server.database.DbAccess ..> com.davidecarella.hclus.server.exceptions.DatabaseConnectionException : "usa"

class com.davidecarella.hclus.server.exceptions.EmptySetException extends java.lang.Exception {
    +EmptySetException(message: String)
}

com.davidecarella.hclus.server.database.TableData ..> com.davidecarella.hclus.server.exceptions.EmptySetException : "usa"

class com.davidecarella.hclus.server.exceptions.InvalidDepthException extends java.lang.Exception {
    +InvalidDepthException(message: String)
}

com.davidecarella.hclus.server.clustering.HierarchicalClusterMiner ..> com.davidecarella.hclus.server.exceptions.InvalidDepthException : "usa"

class com.davidecarella.hclus.server.exceptions.InvalidSizeException extends java.lang.Exception {
    +InvalidSizeException(message: String)
}

com.davidecarella.hclus.server.data.Example ..> com.davidecarella.hclus.server.exceptions.InvalidSizeException : "usa"

class com.davidecarella.hclus.server.exceptions.MissingNumberException extends java.lang.Exception {
    +MissingNumberException(message: String)
}

com.davidecarella.hclus.server.database.TableData ..> com.davidecarella.hclus.server.exceptions.MissingNumberException : "usa"

class com.davidecarella.hclus.server.exceptions.NoDataException extends java.lang.Exception {
    +NoDataException(message: String)
}

com.davidecarella.hclus.server.data.Data ..> com.davidecarella.hclus.server.exceptions.NoDataException : "usa"

together {
    class com.davidecarella.hclus.server.ServerOneClient extends java.lang.Thread {
        -clientSocket: Socket
        -data: Data
        +ServerOneClient(clientSocket: Socket)
        +run()
        -loadDataRequest(inputStream: ObjectInputStream, outputStream: ObjectOutputStream)
        -mineRequest(inputStream: ObjectInputStream, outputStream: ObjectOutputStream)
        -loadDendrogramFromFileRequest(inputStream: ObjectInputStream, outputStream: ObjectOutputStream)
        -tryCloseSocket()
        -log(message: String)
        -{static} walkThrowable(throwable: Throwable): String
    }

    class com.davidecarella.hclus.server.MultiServer {
        -port: int
        +MultiServer(port: int)
        +loop()
    }

    com.davidecarella.hclus.server.MultiServer ..> com.davidecarella.hclus.server.ServerOneClient : "usa"

    class com.davidecarella.hclus.server.MainTest {
        +{static} main(args: String[])
    }

    com.davidecarella.hclus.server.MainTest ..> com.davidecarella.hclus.server.MultiServer : "usa"
}

class com.davidecarella.hclus.client.Keyboard {
}

class com.davidecarella.hclus.client.MainTest {
    -out: ObjectOutputStream
    -in: ObjectInputStream
    +MainTest(ip: String, port: int)
    -menu(): int
    -loadDataOnServer()
    -loadDendrogramFromFileOnServer()
    -mineDendrogramOnServer()
    +{static} main(args: String[])
}

com.davidecarella.hclus.client.MainTest ..> com.davidecarella.hclus.client.Keyboard : "usa"

@enduml
